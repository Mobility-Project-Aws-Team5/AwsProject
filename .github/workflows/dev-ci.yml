name: Dev Branch CI

on:
  push:
    branches:
      - dev


jobs:
  backend-and-frontend:
    runs-on: ubuntu-latest

    steps:
    # 1. 코드 체크아웃
    - name: Checkout code
      uses: actions/checkout@v3

     # 2. Node.js 설정
    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '16'

     #. Docker 설정
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
    
     # Docker Login
    - name: Log in to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }} # Docker Hub 사용자명
        password: ${{ secrets.DOCKER_PASSWORD }} # Docker Hub 비밀번호
 
    - name: push docker image
      working-directory: ./car_platform_app/build
      run: |
        docker push ${{ secrets.DOCKER_USERNAME }}/dev-flt-web:latest
        docker push ${{ secrets.DOCKER_USERNAME }}/dev-flt-server:latest


    - name: Set up kubectl
      uses: azure/setup-kubectl@v3
      with:
          version: 'v1.28.0'

      # 6. Kubeconfig 설정
    - name: Configure kubeconfig
      env:
        KUBECONFIG: ${{ secrets.KUBECONFIG }}  # 클러스터 접근 토큰
      run: |
        mkdir -p ~/.kube
        echo "${KUBECONFIG}" > ~/.kube/config

      # 7. Kubernetes 적용
    - name: Deploy to Kubernetes
      run: |
        kubectl delete -f /home/ec2-user/kube/dev/web-deployment.yaml
        kubectl apply -f /home/ec2-user/kube/dev/web-deployment.yaml
        kubectl delete -f /home/ec2-user/kube/dev/was-deployment.yaml
        kubectl apply -f /home/ec2-user/kube/dev/was-deployment.yaml

