name: Dev Branch CI

on:
  push:
    branches:
      - test


jobs:
  backend-and-frontend:
    runs-on: ubuntu-latest

    steps:
    # 1. 코드 체크아웃
    - name: Checkout code
      uses: actions/checkout@v3

     # 2. Node.js 설정
    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '16'

     #. Docker 설정
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
    
     # Docker Login
    - name: Log in to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }} # Docker Hub 사용자명
        password: ${{ secrets.DOCKER_PASSWORD }} # Docker Hub 비밀번호
 
    # # 3. Backend 작업
    - name: Install Backend Dependencies
      working-directory: ./carrot_server
      run: npm install
    
    - name: docker build
      working-directory: ./carrot_server
      run: docker build -t ${{ secrets.DOCKER_USERNAME }}/test-flt-server:latest .

    # # flutter 설치
    - name: Install flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: '3.24.4'

      #4. Frontend 작업
    - name: Install Frontend Dependencies
      working-directory: ./car_platform_app
      run: flutter pub get
    
    # 빌드 단계
    - name: build flutter web 
      working-directory: ./car_platform_app
      run: flutter build web
    
    # 분석
    - name: analyze flutter
      working-directory: ./car_platform_app
      run: flutter analyze
      continue-on-error: true

    # 테스팅
    - name: testing flutter
      working-directory: ./car_platform_app
      run: flutter test
      continue-on-error: true

    # 배포 단계
    - name: build docker
      working-directory: ./car_platform_app/build
      run: docker build -t ${{ secrets.DOCKER_USERNAME }}/test-flt-web:latest .

    - name: push docker image
      run: |
        docker push ${{ secrets.DOCKER_USERNAME }}/test-flt-web:latest
        docker push ${{ secrets.DOCKER_USERNAME }}/test-flt-server:latest
